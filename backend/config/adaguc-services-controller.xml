<?xml version="1.0" encoding="UTF-8"?>
<adaguc-services>
  <!--


    ### Make sure that this services trusts the controller(s) as well ###

    # keytool -import -v -trustcacerts -alias controller-instance-001 -file ~/adaguc-services-controller-ws/security/adaguc-services-ca.pem -keystore ~/adaguc-services-compute-ws/security/truststore.ts -storepass changeit -noprompt



  -->
  <userworkspace>{ENV.ADAGUC_SERVICES_HOME}/data/adaguc-services-space</userworkspace>

  <external-home-url>{ENV.EXTERNALADDRESS}</external-home-url>

  <basedir>{ENV.ADAGUC_SERVICES_HOME}/data/adaguc-services-base</basedir>

  <server>
    <port>80</port>
  </server>


  <security>
    <enablessl>false</enablessl>
    <userheader>x-ssl_client_s_dn</userheader>
    <truststorepassword>changeit</truststorepassword>
    <truststore>/security/truststore.ts</truststore>
    <keystore>/security/keystore.jks</keystore>
    <keystorepassword>password</keystorepassword>
    <keystoretype>JKS</keystoretype>
    <keyalias>tomcat</keyalias>
    <tokenapi>
      <cacertificate>/security/adaguc-services-ca.cert</cacertificate>
      <caprivatekey>/security/adaguc-services-ca.key</caprivatekey>
      <remote-instances>
        <adaguc-service name="climexp_numerical_wps">{ENV.CLIMEXP_WPS_URL}</adaguc-service>
        <adaguc-service name="copernicus-wps">{ENV.COPERNICUS_WPS_URL}</adaguc-service>
        <!--<adaguc-service name="lot1">https://bovec.dkrz.de/ows/proxy/emu_secured?</adaguc-service>-->

        <!--
          ### Make sure that the remote instance (adaguc-service-compute) is trusted by adding its certificate to the controllers trust store ###

          # 1) Export certificate from remote keystore to a file called adaguc-compute-001.pem:
          cd magic-docker
          keytool -export -alias tomcat -rfc -file adaguc-compute-001.pem -keystore ./adaguc-services-compute/adaguc-services-home/security/keystore.jks -storepass password

          # 2) Put this certificate from adaguc-compute-001.pem into controllers truststore
          cd magic-docker
          sudo keytool -import -v -trustcacerts -alias adaguc-compute-001 -file adaguc-compute-001.pem -keystore ./adaguc-services-controller/adaguc-services-home/security/truststore.ts -storepass changeit -noprompt

          # 3) Export CA of this instance into truststore of remote instance
          cd magic-docker
          keytool -import -v -trustcacerts -alias controller-instance-001 -file ./adaguc-services-controller/adaguc-services-home/security/adaguc-services-ca.cert -keystore ./adaguc-services-compute/adaguc-services-home/security/truststore.ts -storepass changeit -noprompt
        -->
      </remote-instances>
    </tokenapi>
  </security>

  <adaguc-server>
    <adagucexecutable>/adaguc/adaguc-server-master//bin/adagucserver</adagucexecutable>
    <export>ADAGUC_PATH=/adaguc/adaguc-server-master//</export>
    <export>ADAGUC_CONFIG=/config/adaguc-server-config.xml</export>
    <export>ADAGUC_DATARESTRICTION=FALSE</export>
    <export>ADAGUC_LOGFILE=/var/log/adaguc/adaguc.autoresource.log</export>
    <export>ADAGUC_FONT=/adaguc/adaguc-server-master//data/fonts/FreeSans.ttf</export>
  </adaguc-server>


  <oauth2>
     <provider name="ceda">    
      <authloc>https://slcs.ceda.ac.uk/oauth/authorize</authloc>
      <tokenloc>https://slcs.ceda.ac.uk/oauth/access_token</tokenloc>
      <clientid>{ENV.CEDA_OAUTHCLIENTID}</clientid>
      <clientsecret>{ENV.CEDA_OAUTHCLIENTSECRET}</clientsecret>
      <description>Sign in with CEDA (beta)</description>
      <registerlink>https://services.ceda.ac.uk/cedasite/register/info/</registerlink>
      <logo>/impactportal/images/this_is_NOT_the_BADC_logo.jpg</logo>
      <scope>https://slcs.ceda.ac.uk/oauth/certificate/</scope>     
      <oauthcallbackurl>https://{ENV.EXTERNAL_HOSTNAME}/oauth</oauthcallbackurl>
    </provider>      
    <provider name="google">
      <!--
      New application can be created at https://console.developers.google.com/apis/credentials -->
      <authloc>https://accounts.google.com/o/oauth2/auth</authloc>
      <tokenloc>https://accounts.google.com/o/oauth2/token</tokenloc>
      <clientid>{ENV.OAUTHCLIENTID}</clientid>
      <clientsecret>{ENV.OAUTHCLIENTSECRET}</clientsecret>
      <scope>email</scope>
      <logo>images/google.png</logo>
      <description>Sign in with Google</description>
    </provider>
  </oauth2>

  <autowms>
    <enabled>true</enabled>
    <autowmspath>/data/adaguc-autowms/</autowmspath>
    <datasetpath>/data/adaguc-datasets/</datasetpath>
  </autowms>
  <basket>
    <enabled>true</enabled>
  </basket>
  <esgfsearch>
    <enabled>true</enabled>
    <cachelocation>/tmp/esgfsearch</cachelocation>
    <!--<searchurl>https://esg-dn1.nsc.liu.se/esg-search/search?</searchurl>-->
    <!--<searchurl>https://cp4cds-index1.ceda.ac.uk/esg-search/search?</searchurl>-->
    <searchurl>https://index.mips.copernicus-climate.eu/esg-search/search?</searchurl>
  </esgfsearch>
  <joblist>
    <enabled>true</enabled>
  </joblist>
</adaguc-services>
